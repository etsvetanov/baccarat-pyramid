{"version":3,"sources":["webpack:///./app/index.jsx","webpack:///./app/reducers/index.jsx","webpack:///./app/reducers/menu.jsx","webpack:///./app/actions/actionTypes.jsx","webpack:///./app/reducers/optionsReducer.jsx","webpack:///./app/reducers/simulationReducer.jsx","webpack:///./app/app.jsx","webpack:///./app/pages/base.jsx","webpack:///./app/components/NavBar.jsx","webpack:///./app/pages/admin.jsx","webpack:///./app/pages/optionsPage.jsx","webpack:///./app/containers/optionsListContainer.jsx","webpack:///./app/components/optionsList.jsx","webpack:///./app/components/Switch.jsx","webpack:///./app/components/slider.jsx","webpack:///./app/components/spinner.jsx","webpack:///./app/actions/index.jsx","webpack:///./app/pages/simulationPage.jsx","webpack:///./app/components/iterationTable.jsx","webpack:///./app/components/chart.jsx"],"names":["enhancers","window","devToolsExtension","f","store","render","document","getElementById","rootReducer","state","action","menuItems","userOptions","simulation","getUserOptions","initialState","text","active","type","newState","map","Object","assign","item","payload","menuText","SELECT_MENU","SET_OPTION","TOGGLE_OPTION","FETCH_OPTIONS","REQUEST_OPTIONS","RECEIVE_OPTIONS","SAVE_OPTIONS_REQUEST","SAVE_OPTIONS_SUCCESS","START_SIMULATION","SET_PROGRESS","REQUEST_SIMULATION","SIMULATION_FINISHED","actionTypes","initialOptions","name","id","value","min","max","step","userOption","options","hasOwnProperty","optionsLoading","optionsList","opt","optionsSaved","getByOption","user_options","forEach","option","simulationState","progress","simulationProgress","App","BasePage","props","children","Component","NavBar","AdminPage","username","password","handleChange","bind","handleAddUserClick","formData","FormData","append","fetchInit","method","body","fetch","then","response","console","log","setState","event","stateProperty","target","OptionsPage","actions","OptionsListContainer","handleSaveOptions","fetchData","requestOptions","receiveOptions","credentials","json","saveOptionsRequest","saveOptionsSuccess","JSON","stringify","optionsHash","ok","isLoading","setOption","undefined","mapStateToProps","mapDispatchToProps","dispatch","toggleOption","OptionsList","_handleChange","_renderItem","checked","parseFloat","number","_getValue","optionControl","propTypes","array","Switch","inputId","string","isRequired","bool","func","Slider","defaultProps","Spinner","width","height","actionType","selectMenu","startSimulation","setProgress","requestSimulation","simulationFinished","SimulationPage","handleStartSimulation","self","timeoutId","setTimeout","data","pollForProgress","percentage","prevProps","prevState","renderBeginButton","renderProgressBar","renderResults","IterationTable","Chart","series","values","config"],"mappings":"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","file":"app.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose } from 'redux';\nimport rootReducer from './reducers/index.jsx';\nimport App from 'app.jsx';\n\n\nconst enhancers = compose(\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n);\n\nconst store = createStore(rootReducer, {}, enhancers);\n/*\n    the \"store\" provides 3 methods:\n      - getState() - get the current application state\n      - dispatch() - to change the application state by dispatching an action\n      - subscribe() - to subscribe to changes\n*/\n\nReactDOM.render(\n    <App store={store} />,\n    document.getElementById('root')\n);\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/index.jsx","// import { combineReducers } from 'redux';\nimport menuItems from './menu.jsx';\nimport userOptions, {getByOption} from './optionsReducer.jsx';\nimport simulation from './simulationReducer.jsx';\n\n\nfunction rootReducer(state = {}, action) {\n    // this is the shape of the state object\n    return {\n        menuItems: menuItems(state.menuItems, action),\n        userOptions: userOptions(state.userOptions, action),\n        simulation: simulation(state.simulation, action),\n    };\n}\n\nexport default rootReducer;\n\nexport const getUserOptions = (state) => {\n    return getByOption(state.userOptions)\n};\n\n/*\n    * The reducer is a function that returns the new store state tree.\n    * The convention is that if the reducer receives \"undefined\" as the state argument, it must return\n    *   what it considers to be the initial state. This can be handled by the ES6 default argument.\n    * The state tree is a single object with properties for the different \"substates\".\n    * The store is registered with a single reducer.\n    * The reducer function may be split into separate functions, each managing independent parts of\n      the state\n    * These separate functions must be \"combined\" to the single function passed to the store.\n    * Any reducer must return the current state for any unknown action.\n\n    If using 'combineReducers':\n    * The helper function 'combineReducers' turns an object, whose values are different reducing functions,\n      into a single reducing function you pass to 'createStore'\n    * The resulting recuder calls every child reducer, and gather their results into a single state\n      objecy. The shape of the state object matches the keys of the passed reducers.\n    * A popular convention is to name reducers after the state slices they manage.\n    * Summary: combineReducers will return a reducer. When called by the store, this reducer will\n      return an object, representing the new state, whose keys will be the same as the names of the\n      separate reducers\n    * http://redux.js.org/docs/api/combineReducers.html\n*/\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/index.jsx","import { SELECT_MENU } from 'actions/actionTypes.jsx';\n\nconst initialState = [\n        {\n            text: 'Simulate',\n            active: true\n        },\n        {\n            text: 'Options',\n            active: false\n        },\n        {\n            text: 'Admin',\n            active: false\n        }\n];\n\nfunction menuItems(state=initialState, action) {\n    switch (action.type) {\n        case SELECT_MENU:\n            let newState = state.map(item => Object.assign(\n                {},\n                item,\n                { active: item.text === action.payload.menuText }\n            ));\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default menuItems\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/menu.jsx","export const SELECT_MENU = 'SELECT_MENU';\nexport const SET_OPTION = 'SET_OPTION';\nexport const TOGGLE_OPTION = 'TOGGLE_OPTION';\nexport const FETCH_OPTIONS = 'FETCH_OPTIONS';\nexport const REQUEST_OPTIONS = 'REQUEST_OPTIONS';\nexport const RECEIVE_OPTIONS = 'RECEIVE_OPTIONS';\nexport const SAVE_OPTIONS_REQUEST = 'SAVE_OPTIONS_REQUEST';\nexport const SAVE_OPTIONS_SUCCESS = 'SAVE_OPTIONS_SUCCESS';\nexport const START_SIMULATION = 'START_SIMULATION';\nexport const SET_PROGRESS = 'SET_PROGRESS';\nexport const REQUEST_SIMULATION = 'REQUEST_SIMULATION';\nexport const SIMULATION_FINISHED = 'SIMULATION_FINISHED';\n\n\n// WEBPACK FOOTER //\n// ./app/actions/actionTypes.jsx","import * as actionTypes from '../actions/actionTypes.jsx';\n\nconst initialOptions = [\n    {\n        name: \"Starting bet\",\n        id: \"starting_bet\",\n        value: 1,\n        min: \"0.1\",\n        max: \"100\",\n        step: \"0.1\"\n    },\n    {\n        name: \"Step\",\n        id: \"step\",\n        value: 1,\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n    },\n    {\n        name: \"Pairs\",\n        id: \"pairs\",\n        value: 10,\n        min: \"1\",\n        max: \"100\",\n        step: \"1\",\n    },\n    {\n        name: \"Bet column\",\n        id: \"bet_column\",\n        value: true\n    },\n    {\n        name: \"Index column\",\n        id: \"index_column\",\n        value: true\n    },\n    {\n        name: \"Level column\",\n        id: \"level_column\",\n        value: true\n    },\n    {\n        name: \"Net column\",\n        id: \"net_column\",\n        value: true\n    },\n    {\n        name: \"Partner column\",\n        id: \"partner_column\",\n        value: true\n    },\n    {\n        name: \"Choice column\",\n        id: \"choice_column\",\n        value: true\n    },\n    {\n        name: \"Result column\",\n        id: \"result_column\",\n        value: true\n    },\n    {\n        name: \"Debt column\",\n        id: \"debt_column\",\n        value: true\n    },\n    {\n        name: \"Real player rows\",\n        id: \"real_player_rows\",\n        value: true\n    },\n    {\n        name: \"Virtual player rows\",\n        id: \"virtual_player_rows\",\n        value: true\n    }\n];\n\nfunction userOption(state={}, action) {\n    switch (action.type) {\n        case actionTypes.SET_OPTION:\n            if (state.name !== action.payload.name) {\n                return state;\n            }\n            return Object.assign({}, state, {value: action.payload.value});\n\n        case actionTypes.TOGGLE_OPTION:\n            if (state.name !== action.payload.name) {\n                return state;\n            }\n            return Object.assign({}, state, {value: !state.value});\n        case actionTypes.RECEIVE_OPTIONS:\n            const {options} = action.payload;\n\n            if (options.hasOwnProperty(state.id)) {\n                return {\n                    ...state,\n                    value: options[state.id],\n                };\n            }\n\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nfunction optionsLoading(state=true, action) {\n    switch(action.type) {\n        case actionTypes.REQUEST_OPTIONS:\n            return true;\n        case actionTypes.RECEIVE_OPTIONS:\n            return false;\n        default:\n            return state;\n    }\n}\n\nfunction optionsList(state=initialOptions, action) {\n    switch(action.type) {\n        case actionTypes.SET_OPTION:\n        case actionTypes.TOGGLE_OPTION:\n        case actionTypes.RECEIVE_OPTIONS:\n            return state.map(opt => userOption(opt, action));\n        default:\n            return state;\n    }\n}\n\nfunction optionsSaved(state='saved', action) {\n    switch(action.type) {\n        case actionTypes.SAVE_OPTIONS_REQUEST:\n            return \"saving\";\n        case actionTypes.SAVE_OPTIONS_SUCCESS:\n            return \"saved\";\n        case actionTypes.SET_OPTION:\n        case actionTypes.TOGGLE_OPTION:\n            return \"dirty\";\n        default:\n            return state;\n    }\n}\n\nfunction userOptions(state={}, action) {\n    return {\n        optionsLoading: optionsLoading(state.optionsLoading, action),\n        optionsSaved: optionsSaved(state.optionsSaved, action),\n        optionsList: optionsList(state.optionsList, action),\n    }\n}\n\nexport default userOptions;\n\n\nexport const getByOption = (state) => {\n    const user_options = {};\n\n    state.optionsList.forEach((option) => user_options[option.id] = option.value);\n\n    return user_options;\n};\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/optionsReducer.jsx","import * as actionTypes from '../actions/actionTypes.jsx';\n\nfunction simulationState(state = 'idle', action) {\n    switch(action.type) {\n        case actionTypes.START_SIMULATION:\n            return \"running\";\n        case actionTypes.REQUEST_SIMULATION:\n            return \"requested\";\n        case actionTypes.SET_PROGRESS:\n            if (action.progress === '100') {\n                return \"finished\";\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction simulationProgress(state = '0', action) {\n    switch (action.type) {\n        case actionTypes.SET_PROGRESS:\n            return action.progress;\n        default:\n            return state;\n    }\n}\n\nfunction simulation(state = {}, action) {\n    return {\n        simulationState: simulationState(state.simulationState, action),\n        simulationProgress: simulationProgress(state.simulationProgress, action),\n    }\n}\n\nexport default simulation;\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/simulationReducer.jsx","import React from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport BasePage from 'pages/base.jsx';\nimport AdminPage from 'pages/admin.jsx';\nimport OptionsPage from 'pages/optionsPage.jsx';\nimport SimulationPage from 'pages/simulationPage.jsx';\n\n/*\n    The 'Provider' component makes the Redux available to the connect() calls in the component\n    hierarchy below. Normally you can't use connect() without wrapping the root component in\n    <Provider> (or you'd have to pass 'store' as a prop to every connect()'ed component.\n*/\n\nconst App = ({ store }) => (\n    <Provider store={store}>\n        <Router history={browserHistory}>\n            <Route path=\"/\" component={BasePage}>\n                <Route path=\"admin\" component={AdminPage}/>\n                <Route path=\"options\" component={OptionsPage}/>\n                <Route path=\"simulate\" component={SimulationPage}/>\n            </Route>\n            {/*<Route path=\"/login\" component={Login} />*/}\n        </Router>\n    </Provider>\n);\n\nexport default App;\n\n// TODO: style active <Link>s and abstract as in: https://github.com/reactjs/react-router-tutorial/tree/master/lessons/05-active-links\n\n\n// WEBPACK FOOTER //\n// ./app/app.jsx","import React, { PropTypes } from 'react';\nimport NavBar from 'components/NavBar.jsx';\n\nclass BasePage extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default BasePage;\n\n\n// WEBPACK FOOTER //\n// ./app/pages/base.jsx","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router';\n\nclass NavBar extends Component {\n    render() {\n        return (\n            <div className=\"app-nav-bar\">\n                <div className=\"navbar-nav-buttons\">\n                    <Link to=\"/options\">Options</Link>\n                    <Link to=\"/simulate\">Simulate</Link>\n                    <Link to=\"/admin\">Admin</Link>\n                </div>\n\n                <div className=\"navbar-logout\">\n                    <a href=\"/logout\">logout</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n\n\n// WEBPACK FOOTER //\n// ./app/components/NavBar.jsx","import React, {PropTypes} from 'react';\n\n\nclass AdminPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAddUserClick = this.handleAddUserClick.bind(this);\n    }\n\n    handleAddUserClick() {\n        // const fetchHeaders = new Headers();\n        // console.log('headers:', fetchHeaders);\n\n        const formData = new FormData();\n        formData.append('username', this.state.username);\n        formData.append('password', this.state.password);\n\n        const fetchInit = {\n            method: 'POST',\n            // headers: fetchHeaders,\n            body: formData,\n        };\n\n        fetch('/api/create_user', fetchInit)\n            .then((response) => {\n                console.log('User created', response)\n            });\n\n        this.setState({\n            username: '',\n            password: '',\n        });\n    }\n\n    handleChange(event) {\n        const stateProperty = event.target.name;\n        this.setState({\n            [stateProperty]: event.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form >\n                    <fieldset>\n                        <legend> Create new user </legend>\n                        <table className=\"inline-form\">\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <label> Username </label>\n                                    </td>\n                                    <td>\n                                        <input className=\"fancy-input\"\n                                               type=\"text\"\n                                               name=\"username\"\n                                               value={this.state.username}\n                                               onChange={this.handleChange}\n                                               autoComplete=\"new-password\"\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label> Password </label>\n                                    </td>\n                                    <td>\n                                        <input className=\"fancy-input\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               value={this.state.password}\n                                               onChange={this.handleChange}\n                                               autoComplete=\"new-password\"\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>  </td>\n                                    <td>\n                                        <div className=\"button\" onClick={this.handleAddUserClick}>\n                                            Create\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AdminPage;\n\n\n// WEBPACK FOOTER //\n// ./app/pages/admin.jsx","import React, {PropTypes} from 'react';\nimport OptionsListContainer from '../containers/optionsListContainer.jsx';\n\nclass OptionsPage extends React.Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <OptionsListContainer />\n            </div>\n        )\n    }\n}\n\nexport default OptionsPage\n\n\n// WEBPACK FOOTER //\n// ./app/pages/optionsPage.jsx","import {connect} from 'react-redux';\nimport React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport OptionsList from 'components/optionsList.jsx';\nimport Spinner from 'components/spinner.jsx';\nimport * as actions from 'actions/index.jsx';\nimport {getUserOptions} from '../reducers/index.jsx';\n\nclass OptionsListContainer extends Component {\n    constructor() {\n        super();\n\n        this.handleSaveOptions = this.handleSaveOptions.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        console.log('will fetch data...');\n        const {requestOptions, receiveOptions} = this.props;\n\n        requestOptions();\n\n        fetch('/api/user_options', {credentials: 'include'})\n            .then(function (response) {\n                return response.json();\n            })\n            .then(function (options) {\n                receiveOptions(options);\n            });\n    }\n\n    handleSaveOptions() {\n        console.log('Saving options...');\n\n        const {saveOptionsRequest, saveOptionsSuccess} = this.props;\n\n        saveOptionsRequest();\n\n        fetch('/api/user_options', {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(this.props.optionsHash),\n        }).then(function (response) {\n            if (response.ok) {\n                saveOptionsSuccess();\n            }\n        });\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            console.log('Spin right round...');\n            return <Spinner />\n        }\n\n        return (\n            <div className=\"options-container\">\n                <OptionsList\n                    options={this.props.options}\n                    setOption={this.props.setOption}\n                />\n\n                {/*<div className=\"button\" onClick={this.handleSaveOptions}>*/}\n                    {/*{ this.props.optionsSaved === 'saving'*/}\n                        {/*? <Spinner width=\"15px\" height=\"15px\"/>*/}\n                        {/*: null*/}\n                    {/*}*/}\n                    {/*Save options*/}\n                {/*</div>*/}\n\n                <Button\n                    content=\"Save options\"\n                    loading={this.props.optionsSaved === \"saving\"}\n                    icon={this.props.optionsSaved === \"saved\" ? \"checkmark\" : undefined}\n                    onClick={this.handleSaveOptions}\n                    color={this.props.optionsSaved === \"dirty\" ? \"green\" : undefined}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        optionsLoading: state.userOptions.optionsLoading,\n        optionsSaved: state.userOptions.optionsSaved,\n        options: state.userOptions.optionsList,\n        optionsHash: getUserOptions(state),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // TODO: remove this?\n        toggleOption: (name) => {\n            dispatch(actions.toggleOption(name));\n        },\n\n        setOption: (name, value) => {\n            dispatch(actions.setOption(name, value));\n        },\n\n        requestOptions: () => {\n            dispatch(actions.requestOptions());\n        },\n\n        receiveOptions: (options) => {\n            dispatch(actions.receiveOptions(options));\n        },\n\n        saveOptionsRequest: () => {\n            dispatch(actions.saveOptionsRequest());\n        },\n\n        saveOptionsSuccess: () => {\n            dispatch(actions.saveOptionsSuccess());\n        }\n    }\n};\n\nOptionsListContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OptionsListContainer);\n\nexport default OptionsListContainer\n\n\n// WEBPACK FOOTER //\n// ./app/containers/optionsListContainer.jsx","import React, {PropTypes} from 'react';\nimport Switch from './Switch.jsx';\nimport Slider from './slider.jsx';\nimport Spinner from './spinner.jsx';\n\nclass OptionsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this._handleChange = this._handleChange.bind(this);\n        this._renderItem = this._renderItem.bind(this);\n    }\n\n    _getValue(event) {\n        switch (event.target.type) {\n            case 'checkbox':\n                return event.target.checked;\n            case 'range':\n                return parseFloat(event.target.value);\n            case 'number':\n                const number = parseFloat(event.target.value);\n                if (number > event.target.max) {\n                    return parseFloat(event.target.max);\n                }\n                return parseFloat(event.target.value);\n        }\n    }\n\n    _handleChange(event) {\n        // const value = event.target.value;\n        const value = this._getValue(event);\n        const name = event.target.name;\n        this.props.setOption(name, value)\n    }\n\n    _renderItem(option) {\n        let optionControl;\n\n        switch (typeof option.value) {\n            case 'boolean':\n                optionControl = (\n                    <Switch\n                        name={option.name}\n                        checked={option.value}\n                        id={option.id}\n                        handleChange={this._handleChange}\n                    />\n                );\n                break;\n            case 'number':\n                optionControl = (\n                    <Slider\n                        value={option.value}\n                        name={option.name}\n                        handleChange={this._handleChange}\n                        min={option.min}\n                        max={option.max}\n                        step={option.step}\n                    />\n                );\n        }\n\n        return (\n            <li key={option.name} className=\"option-container\">\n                <span className=\"inline-label\"> {option.name} </span>\n                {optionControl}\n            </li>\n        );\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.props.options.map(this._renderItem)}\n            </ul>\n        )\n    }\n}\n\nOptionsList.propTypes = {\n    options: PropTypes.array\n};\n\nexport default OptionsList\n\n\n// WEBPACK FOOTER //\n// ./app/components/optionsList.jsx","import React, {PropTypes} from 'react';\n\n\nclass Switch extends React.Component {\n    render() {\n        const inputId = `id_${this.props.id}`;\n\n        return (\n            <div>\n                <div className=\"onoffswitch\">\n                    <input type=\"checkbox\"\n                           name={this.props.name}\n                           className=\"onoffswitch-checkbox\"\n                           onChange={this.props.handleChange}\n                           checked={this.props.checked}\n                           id={inputId}\n                    />\n                    <label className=\"onoffswitch-label\" htmlFor={inputId}>\n                        <span className=\"onoffswitch-inner\"> </span>\n                        <span className=\"onoffswitch-switch\"> </span>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nSwitch.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    checked: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func,\n};\n\nexport default Switch\n\n\n//             {/*onChange={this.props.handleChange}*/}\n\n\n// WEBPACK FOOTER //\n// ./app/components/Switch.jsx","import React, {PropTypes} from 'react';\n\nclass Slider extends React.Component {\n    render() {\n        return (\n            <div className=\"slider-container\">\n                <input type=\"range\"\n                       name={this.props.name}\n                       value={this.props.value}\n                       onChange={this.props.handleChange}\n                       className=\"slider\"\n                       min={this.props.min}\n                       max={this.props.max}\n                       step={this.props.step}\n                />\n                <input type=\"number\"\n                       name={this.props.name}\n                       value={this.props.value}\n                       onChange={this.props.handleChange}\n                       className=\"slider-input\"\n                       min={this.props.min}\n                       max={this.props.max}\n                       step={this.props.step}\n                       pattern=\"\\d{2}\"\n                />\n            </div>\n        )\n    }\n}\n\nSlider.propTypes = {\n    name: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    value: PropTypes.number.isRequired,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    step: PropTypes.string,\n};\n\nSlider.defaultProps = {\n    max: \"100\",\n    min: \"1\",\n    step: \"1\",\n};\n\nexport default Slider\n\n\n// WEBPACK FOOTER //\n// ./app/components/slider.jsx","import React from 'react';\n\nconst Spinner = (props) => (\n    <svg className=\"spinner button-icon\" width={props.width} height={props.height} viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"/>\n    </svg>\n);\n\nexport default Spinner\n\n\n// WEBPACK FOOTER //\n// ./app/components/spinner.jsx","import * as actionType from './actionTypes.jsx';\n\n// ACTION CREATORS:\n\n\nexport const selectMenu = (menuText) => {\n    return {\n        type: actionType.SELECT_MENU,\n        payload: {\n            menuText: menuText\n        }\n    }\n};\n\nexport const setOption = (name, value) => {\n    return {\n        type: actionType.SET_OPTION,\n        payload: {\n            name,\n            value,\n        }\n    }\n};\n\nexport const toggleOption = (name) => {\n    return {\n        type: actionType.TOGGLE_OPTION,\n        payload: {\n            name,\n        }\n    }\n};\n\nexport const requestOptions = () => {\n    return {\n        type: actionType.REQUEST_OPTIONS,\n    }\n};\n\nexport const receiveOptions = (options) => {\n    return {\n        type: actionType.RECEIVE_OPTIONS,\n        payload: {\n            options,\n        }\n    }\n};\n\nexport const saveOptionsRequest = () => {\n    return {\n        type: actionType.SAVE_OPTIONS_REQUEST,\n    }\n};\n\nexport const saveOptionsSuccess = () => {\n    return {\n        type: actionType.SAVE_OPTIONS_SUCCESS,\n    }\n};\n\nexport const startSimulation = () => {\n    return {\n        type: actionType.START_SIMULATION,\n    }\n};\n\nexport const setProgress = (progress) => {\n    return {\n        type: actionType.SET_PROGRESS,\n        progress,\n    }\n};\n\nexport const requestSimulation = () => {\n    return {\n        type: actionType.REQUEST_SIMULATION,\n    }\n};\n\nexport const simulationFinished = () => {\n    return {\n        type: actionType.SIMULATION_FINISHED,\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./app/actions/index.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Progress, Grid } from 'semantic-ui-react';\n\nimport IterationTable  from '../components/iterationTable.jsx';\nimport Chart from '../components/chart.jsx';\nimport * as actions from '../actions/index.jsx';\n\nclass SimulationPage extends React.Component {\n    constructor() {\n        super();\n\n        this.handleStartSimulation = this.handleStartSimulation.bind(this);\n        // this.pollForProgress = this.pollForProgress.bind(this);\n    }\n\n    pollForProgress() {\n        const self = this;\n\n        const timeoutId = window.setTimeout(function() {\n            fetch('/api/simulation_status', {credentials: 'include'})\n                .then(function (response) {\n                    return response.json();\n                })\n                .then(function (data) {\n                    if (data.progress !== '100') {\n                        self.pollForProgress();\n                    }\n                    self.props.setProgress(data.percentage);\n                })\n        }, 1000)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.simulationState === 'requested' && this.props.simulationState === 'running') {\n            this.pollForProgress()\n        }\n    }\n\n    handleStartSimulation() {\n        const {startSimulation, requestSimulation} = this.props;\n\n        requestSimulation();\n\n        fetch('/api/start_simulation', {credentials: 'include'})\n            .then(function (response) {\n                if (response.ok) {\n                    startSimulation();\n                }\n            });\n    }\n\n    renderBeginButton () {\n        return (\n            <div className=\"main\">\n                <Button\n                    content=\"Begin\"\n                    onClick={this.handleStartSimulation}\n                    loading={this.props.simulationState === 'requested'}\n                />\n            </div>\n        )\n    }\n\n    renderProgressBar() {\n        return (\n            <Grid columns='equal'>\n                <Grid.Column/>\n                <Grid.Column width={8}>\n                    <Progress percent={this.props.simulationProgress} autoSuccess progress={true}/>\n                </Grid.Column>\n                <Grid.Column/>\n            </Grid>\n        );\n    }\n\n    renderResults() {\n        return (\n            <Grid columns='equal'>\n                <Grid.Row>\n                    <Grid.Column width={16} className=\"main\">\n                            <Chart />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column />\n                    <Grid.Column width={8}>\n                        <IterationTable />\n                    </Grid.Column>\n                    <Grid.Column />\n                </Grid.Row>\n            </Grid>\n        )\n    }\n\n    render() {\n\n        switch (this.props.simulationState) {\n            case 'idle':\n            case 'requested':\n                return this.renderBeginButton();\n            case 'running':\n                return this.renderProgressBar();\n            case 'finished':\n                return this.renderResults();\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        simulationState: state.simulation.simulationState,\n        simulationProgress: state.simulation.simulationProgress,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        startSimulation: () => {\n            dispatch(actions.startSimulation());\n        },\n        setProgress: (percentage) => {\n            dispatch(actions.setProgress(percentage));\n        },\n        requestSimulation: () => {\n            dispatch(actions.requestSimulation());\n        },\n        simulationFinished: () => {\n            dispatch(actions.simulationFinished());\n        },\n    };\n};\n\nSimulationPage = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SimulationPage);\n\nexport default SimulationPage\n\n\n// WEBPACK FOOTER //\n// ./app/pages/simulationPage.jsx","import React from 'react'\nimport {Table} from 'semantic-ui-react'\n\nconst IterationTable = () => {\n    return (\n        <Table celled inverted selectable >\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Status</Table.HeaderCell>\n                    <Table.HeaderCell>Notes</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>John</Table.Cell>\n                    <Table.Cell>Approved</Table.Cell>\n                    <Table.Cell textAlign='right'>None</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Jamie</Table.Cell>\n                    <Table.Cell>Approved</Table.Cell>\n                    <Table.Cell textAlign='right'>Requires call</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Jill</Table.Cell>\n                    <Table.Cell>Denied</Table.Cell>\n                    <Table.Cell textAlign='right'>None</Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        </Table>\n    )\n};\n\n\nexport default IterationTable\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/iterationTable.jsx","import {line as Line} from 'zingchart-react';\nimport React, { Component } from 'react';\nimport { Input, Icon } from 'semantic-ui-react';\n\nclass Chart extends Component {\n    render() {\n        const series =  [\n                {\n                    values: [35,42,67,89,25,34,67,85],\n                }\n        ];\n\n        const config = {\n\n        };\n\n\n        return (\n            <div className=\"chart-container\">\n                <Line id=\"iterationsChart\" height=\"300\" width=\"600\" data={config} series={series} theme=\"dark\"/>\n                <div className=\"iteration-input-container\">\n                    <Icon name=\"chevron left\" size=\"big\"/>\n                    <Input className=\"iteration-input\" />\n                    <Icon name=\"chevron right\" size=\"big\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chart\n\n\n// WEBPACK FOOTER //\n// ./app/components/chart.jsx"],"sourceRoot":""}