{"version":3,"sources":["webpack:///./app/index.jsx","webpack:///./app/reducers/index.jsx","webpack:///./app/reducers/menu.jsx","webpack:///./app/actions/actionTypes.jsx","webpack:///./app/reducers/optionsReducer.jsx","webpack:///./app/app.jsx","webpack:///./app/pages/base.jsx","webpack:///./app/components/NavBar.jsx","webpack:///./app/pages/admin.jsx","webpack:///./app/pages/optionsPage.jsx","webpack:///./app/containers/optionsListContainer.jsx","webpack:///./app/components/optionsList.jsx","webpack:///./app/components/Switch.jsx","webpack:///./app/components/slider.jsx","webpack:///./app/components/spinner.jsx","webpack:///./app/actions/index.jsx"],"names":["enhancers","window","devToolsExtension","f","store","render","document","getElementById","rootReducer","state","action","menuItems","userOptions","initialState","text","active","type","newState","map","Object","assign","item","payload","menuText","SELECT_MENU","SET_OPTION","TOGGLE_OPTION","FETCH_OPTIONS","REQUEST_OPTIONS","RECEIVE_OPTIONS","SAVE_OPTIONS_REQUEST","SAVE_OPTIONS_SUCCESS","initialOptions","name","id","value","min","max","step","userOption","options","hasOwnProperty","optionsLoading","optionsList","opt","App","BasePage","props","children","Component","NavBar","AdminPage","username","password","handleChange","bind","handleAddUserClick","formData","FormData","append","fetchInit","method","body","fetch","then","response","console","log","setState","event","stateProperty","target","OptionsPage","OptionsListContainer","fetchData","requestOptions","receiveOptions","credentials","json","isLoading","setOption","handleSaveOptions","mapStateToProps","mapDispatchToProps","dispatch","toggleOption","OptionsList","_handleChange","_renderItem","checked","parseFloat","number","_getValue","option","optionControl","propTypes","array","Switch","inputId","string","isRequired","bool","func","Slider","defaultProps","Spinner","actionType","selectMenu","saveOptionsRequest","saveOptionsSuccess"],"mappings":"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","file":"app.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose } from 'redux';\nimport rootReducer from './reducers/index.jsx';\nimport App from 'app.jsx';\n\n\nconst enhancers = compose(\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n);\n\nconst store = createStore(rootReducer, {}, enhancers);\n/*\n    the \"store\" provides 3 methods:\n      - getState() - get the current application state\n      - dispatch() - to change the application state by dispatching an action\n      - subscribe() - to subscribe to changes\n*/\n\nReactDOM.render(\n    <App store={store} />,\n    document.getElementById('root')\n);\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/index.jsx","// import { combineReducers } from 'redux';\nimport menuItems from './menu.jsx';\nimport userOptions from './optionsReducer.jsx';\n\nfunction rootReducer(state = {}, action) {\n    // this is the shape of the state object\n    return {\n        menuItems: menuItems(state.menuItems, action),\n        userOptions: userOptions(state.userOptions, action),\n    };\n}\n\nexport default rootReducer;\n\n\n/*\n    * The reducer is a function that returns the new store state tree.\n    * The convention is that if the reducer receives \"undefined\" as the state argument, it must return\n    *   what it considers to be the initial state. This can be handled by the ES6 default argument.\n    * The state tree is a single object with properties for the different \"substates\".\n    * The store is registered with a single reducer.\n    * The reducer function may be split into separate functions, each managing independent parts of\n      the state\n    * These separate functions must be \"combined\" to the single function passed to the store.\n    * Any reducer must return the current state for any unknown action.\n\n    If using 'combineReducers':\n    * The helper function 'combineReducers' turns an object, whose values are different reducing functions,\n      into a single reducing function you pass to 'createStore'\n    * The resulting recuder calls every child reducer, and gather their results into a single state\n      objecy. The shape of the state object matches the keys of the passed reducers.\n    * A popular convention is to name reducers after the state slices they manage.\n    * Summary: combineReducers will return a reducer. When called by the store, this reducer will\n      return an object, representing the new state, whose keys will be the same as the names of the\n      separate reducers\n    * http://redux.js.org/docs/api/combineReducers.html\n*/\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/index.jsx","import { SELECT_MENU } from 'actions/actionTypes.jsx';\n\nconst initialState = [\n        {\n            text: 'Simulate',\n            active: true\n        },\n        {\n            text: 'Options',\n            active: false\n        },\n        {\n            text: 'Admin',\n            active: false\n        }\n];\n\nfunction menuItems(state=initialState, action) {\n    switch (action.type) {\n        case SELECT_MENU:\n            let newState = state.map(item => Object.assign(\n                {},\n                item,\n                { active: item.text === action.payload.menuText }\n            ));\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default menuItems\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/menu.jsx","export const SELECT_MENU = 'SELECT_MENU';\nexport const SET_OPTION = 'SET_OPTION';\nexport const TOGGLE_OPTION = 'TOGGLE_OPTION';\nexport const FETCH_OPTIONS = 'FETCH_OPTIONS';\nexport const REQUEST_OPTIONS = 'REQUEST_OPTIONS';\nexport const RECEIVE_OPTIONS = 'RECEIVE_OPTIONS';\nexport const SAVE_OPTIONS_REQUEST = 'SAVE_OPTIONS_REQUEST';\nexport const SAVE_OPTIONS_SUCCESS = 'SAVE_OPTIONS_SUCCESS';\n\n\n// WEBPACK FOOTER //\n// ./app/actions/actionTypes.jsx","import {\n    SET_OPTION,\n    TOGGLE_OPTION,\n    REQUEST_OPTIONS,\n    RECEIVE_OPTIONS,\n} from 'actions/actionTypes.jsx';\n\nconst initialOptions = [\n    {\n        name: \"Starting bet\",\n        id: \"starting_bet\",\n        value: 1,\n        min: \"0.1\",\n        max: \"100\",\n        step: \"0.1\"\n    },\n    {\n        name: \"Step\",\n        id: \"step\",\n        value: 1,\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n    },\n    {\n        name: \"Pairs\",\n        id: \"pairs\",\n        value: 10,\n        min: \"1\",\n        max: \"100\",\n        step: \"1\",\n    },\n    {\n        name: \"Bet column\",\n        id: \"bet_column\",\n        value: true\n    },\n    {\n        name: \"Index column\",\n        id: \"index_column\",\n        value: true\n    },\n    {\n        name: \"Level column\",\n        id: \"level_column\",\n        value: true\n    },\n    {\n        name: \"Net column\",\n        id: \"net_column\",\n        value: true\n    },\n    {\n        name: \"Partner column\",\n        id: \"partner_column\",\n        value: true\n    },\n    {\n        name: \"Choice column\",\n        id: \"choice_column\",\n        value: true\n    },\n    {\n        name: \"Result column\",\n        id: \"result_column\",\n        value: true\n    },\n    {\n        name: \"Debt column\",\n        id: \"debt_column\",\n        value: true\n    },\n    {\n        name: \"Real player rows\",\n        id: \"real_player_rows\",\n        value: true\n    },\n    {\n        name: \"Virtual player rows\",\n        id: \"virtual_player_rows\",\n        value: true\n    }\n];\n\nfunction userOption(state={}, action) {\n    switch (action.type) {\n        case SET_OPTION:\n            if (state.name !== action.payload.name) {\n                return state\n            }\n            return Object.assign({}, state, {value: action.payload.value});\n\n        case TOGGLE_OPTION:\n            if (state.name !== action.payload.name) {\n                return state\n            }\n            return Object.assign({}, state, {value: !state.value});\n        case RECEIVE_OPTIONS:\n            const {options} = action.payload;\n\n            if (options.hasOwnProperty(state.id)) {\n                return {\n                    ...state,\n                    value: options[state.id],\n                };\n            }\n\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nfunction optionsLoading(state=true, action) {\n    switch(action.type) {\n        case REQUEST_OPTIONS:\n            return true;\n        case RECEIVE_OPTIONS:\n            return false;\n        default:\n            return state;\n    }\n}\n\nfunction optionsList(state=initialOptions, action) {\n    switch(action.type) {\n        case SET_OPTION:\n        case TOGGLE_OPTION:\n        case RECEIVE_OPTIONS:\n            return state.map(opt => userOption(opt, action));\n        default:\n            return state;\n    }\n}\n\nfunction userOptions(state={}, action) {\n    return {\n        optionsLoading: optionsLoading(state.optionsLoading, action),\n        optionsList: optionsList(state.optionsList, action),\n    }\n}\n\nexport default userOptions;\n\n\n// WEBPACK FOOTER //\n// ./app/reducers/optionsReducer.jsx","import React from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport BasePage from 'pages/base.jsx';\nimport AdminPage from 'pages/admin.jsx';\nimport OptionsPage from 'pages/optionsPage.jsx';\n// import SimulatePage from 'pages/simulatePage.jsx';\n\n/*\n    The 'Provider' component makes the Redux available to the connect() calls in the component\n    hierarchy below. Normally you can't use connect() without wrapping the root component in\n    <Provider> (or you'd have to pass 'store' as a prop to every connect()'ed component.\n*/\n\nconst App = ({ store }) => (\n    <Provider store={store}>\n        <Router history={browserHistory}>\n            <Route path=\"/\" component={BasePage}>\n                <Route path=\"admin\" component={AdminPage}/>\n                <Route path=\"options\" component={OptionsPage}/>\n                {/*<Route path=\"simulate\" component={SimulatePage}/>*/}\n            </Route>\n            {/*<Route path=\"/login\" component={Login} />*/}\n        </Router>\n    </Provider>\n);\n\nexport default App;\n\n// TODO: style active <Link>s and abstract as in: https://github.com/reactjs/react-router-tutorial/tree/master/lessons/05-active-links\n\n\n// WEBPACK FOOTER //\n// ./app/app.jsx","import React, { PropTypes } from 'react';\nimport NavBar from 'components/NavBar.jsx';\n\nclass BasePage extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default BasePage;\n\n\n// WEBPACK FOOTER //\n// ./app/pages/base.jsx","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router';\n\nclass NavBar extends Component {\n    render() {\n        return (\n            <div className=\"app-nav-bar\">\n                <div className=\"navbar-nav-buttons\">\n                    <Link to=\"/options\">Options</Link>\n                    <Link to=\"/simulate\">Simulate</Link>\n                    <Link to=\"/admin\">Admin</Link>\n                </div>\n\n                <div className=\"navbar-logout\">\n                    <a href=\"/logout\">logout</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n\n\n// WEBPACK FOOTER //\n// ./app/components/NavBar.jsx","import React, {PropTypes} from 'react';\n\n\nclass AdminPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAddUserClick = this.handleAddUserClick.bind(this);\n    }\n\n    handleAddUserClick() {\n        // const fetchHeaders = new Headers();\n        // console.log('headers:', fetchHeaders);\n\n        const formData = new FormData();\n        formData.append('username', this.state.username);\n        formData.append('password', this.state.password);\n\n        const fetchInit = {\n            method: 'POST',\n            // headers: fetchHeaders,\n            body: formData,\n        };\n\n        fetch('/api/create_user', fetchInit)\n            .then((response) => {\n                console.log('User created', response)\n            });\n\n        this.setState({\n            username: '',\n            password: '',\n        });\n    }\n\n    handleChange(event) {\n        const stateProperty = event.target.name;\n        this.setState({\n            [stateProperty]: event.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form >\n                    <fieldset>\n                        <legend> Create new user </legend>\n                        <table className=\"inline-form\">\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <label> Username </label>\n                                    </td>\n                                    <td>\n                                        <input className=\"fancy-input\"\n                                               type=\"text\"\n                                               name=\"username\"\n                                               value={this.state.username}\n                                               onChange={this.handleChange}\n                                               autoComplete=\"new-password\"\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label> Password </label>\n                                    </td>\n                                    <td>\n                                        <input className=\"fancy-input\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               value={this.state.password}\n                                               onChange={this.handleChange}\n                                               autoComplete=\"new-password\"\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>  </td>\n                                    <td>\n                                        <div className=\"button\" onClick={this.handleAddUserClick}>\n                                            Create\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AdminPage;\n\n\n// WEBPACK FOOTER //\n// ./app/pages/admin.jsx","import React, {PropTypes} from 'react';\n// import Switch from '../components/Switch.jsx';\nimport OptionsListContainer from '../containers/optionsListContainer.jsx';\n\nclass OptionsPage extends React.Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <OptionsListContainer />\n            </div>\n        )\n    }\n}\n\nexport default OptionsPage\n\n\n// WEBPACK FOOTER //\n// ./app/pages/optionsPage.jsx","import {connect} from 'react-redux';\nimport React, {Component, PropTypes} from 'react';\n\nimport OptionsList from 'components/optionsList.jsx';\nimport Spinner from 'components/spinner.jsx';\nimport {setOption, toggleOption, requestOptions, receiveOptions} from 'actions/index.jsx';\n\nclass OptionsListContainer extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        console.log('will fetch data...');\n        const {requestOptions, receiveOptions} = this.props;\n\n        requestOptions();\n\n        fetch('/api/user_options', {credentials: 'include'})\n            .then(function (response) {\n                return response.json()\n            })\n            .then(function (options) {\n                receiveOptions(options);\n            });\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            console.log('Spin right round...');\n            return <Spinner />\n        }\n\n        return (\n            <div>\n                <OptionsList\n                    options={this.props.options}\n                    setOption={this.props.setOption}\n                />\n\n                <div className=\"button\" onClick={this.handleSaveOptions}>\n                    Create\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.userOptions.optionsList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // TODO: remove this?\n        toggleOption: (name) => {\n            dispatch(toggleOption(name));\n        },\n\n        setOption: (name, value) => {\n            dispatch(setOption(name, value));\n        },\n\n        requestOptions: () => {\n            dispatch(requestOptions());\n        },\n\n        receiveOptions: (options) => {\n            dispatch(receiveOptions(options));\n        }\n    }\n};\n\nOptionsListContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OptionsListContainer);\n\nexport default OptionsListContainer\n\n\n// WEBPACK FOOTER //\n// ./app/containers/optionsListContainer.jsx","import React, {PropTypes} from 'react';\nimport Switch from './Switch.jsx';\nimport Slider from './slider.jsx';\nimport Spinner from './spinner.jsx';\n\nclass OptionsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this._handleChange = this._handleChange.bind(this);\n        this._renderItem = this._renderItem.bind(this);\n    }\n\n    _getValue(event) {\n        switch (event.target.type) {\n            case 'checkbox':\n                return event.target.checked;\n            case 'range':\n                return parseFloat(event.target.value);\n            case 'number':\n                const number = parseFloat(event.target.value);\n                if (number > event.target.max) {\n                    return parseFloat(event.target.max);\n                }\n                return parseFloat(event.target.value);\n        }\n    }\n\n    _handleChange(event) {\n        // const value = event.target.value;\n        const value = this._getValue(event);\n        const name = event.target.name;\n        this.props.setOption(name, value)\n    }\n\n    _renderItem(option) {\n        let optionControl;\n\n        switch (typeof option.value) {\n            case 'boolean':\n                optionControl = (\n                    <Switch\n                        name={option.name}\n                        checked={option.value}\n                        id={option.id}\n                        handleChange={this._handleChange}\n                    />\n                );\n                break;\n            case 'number':\n                optionControl = (\n                    <Slider\n                        value={option.value}\n                        name={option.name}\n                        handleChange={this._handleChange}\n                        min={option.min}\n                        max={option.max}\n                        step={option.step}\n                    />\n                );\n        }\n\n        return (\n            <li key={option.name} className=\"option-container\">\n                <span className=\"inline-label\"> {option.name} </span>\n                {optionControl}\n            </li>\n        );\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.props.options.map(this._renderItem)}\n            </ul>\n        )\n    }\n}\n\nOptionsList.propTypes = {\n    options: PropTypes.array\n};\n\nexport default OptionsList\n\n\n// WEBPACK FOOTER //\n// ./app/components/optionsList.jsx","import React, {PropTypes} from 'react';\n\n\nclass Switch extends React.Component {\n    render() {\n        const inputId = `id_${this.props.id}`;\n\n        return (\n            <div>\n                <div className=\"onoffswitch\">\n                    <input type=\"checkbox\"\n                           name={this.props.name}\n                           className=\"onoffswitch-checkbox\"\n                           onChange={this.props.handleChange}\n                           checked={this.props.checked}\n                           id={inputId}\n                    />\n                    <label className=\"onoffswitch-label\" htmlFor={inputId}>\n                        <span className=\"onoffswitch-inner\"> </span>\n                        <span className=\"onoffswitch-switch\"> </span>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nSwitch.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    checked: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func,\n};\n\nexport default Switch\n\n\n//             {/*onChange={this.props.handleChange}*/}\n\n\n// WEBPACK FOOTER //\n// ./app/components/Switch.jsx","import React, {PropTypes} from 'react';\n\nclass Slider extends React.Component {\n    render() {\n        return (\n            <div className=\"slider-container\">\n                <input type=\"range\"\n                       name={this.props.name}\n                       value={this.props.value}\n                       onChange={this.props.handleChange}\n                       className=\"slider\"\n                       min={this.props.min}\n                       max={this.props.max}\n                       step={this.props.step}\n                />\n                <input type=\"number\"\n                       name={this.props.name}\n                       value={this.props.value}\n                       onChange={this.props.handleChange}\n                       className=\"slider-input\"\n                       min={this.props.min}\n                       max={this.props.max}\n                       step={this.props.step}\n                       pattern=\"\\d{2}\"\n                />\n            </div>\n        )\n    }\n}\n\nSlider.propTypes = {\n    name: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    value: PropTypes.number.isRequired,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    step: PropTypes.string,\n};\n\nSlider.defaultProps = {\n    max: \"100\",\n    min: \"1\",\n    step: \"1\",\n};\n\nexport default Slider\n\n\n// WEBPACK FOOTER //\n// ./app/components/slider.jsx","import React, {PropTypes} from 'react';\n\nconst Spinner = () => (\n    <svg className=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"/>\n    </svg>\n);\n\nexport default Spinner\n\n\n// WEBPACK FOOTER //\n// ./app/components/spinner.jsx","import * as actionType from './actionTypes.jsx';\n\n// ACTION CREATORS:\n\n\nexport const selectMenu = (menuText) => {\n    return {\n        type: actionType.SELECT_MENU,\n        payload: {\n            menuText: menuText\n        }\n    }\n};\n\nexport const setOption = (name, value) => {\n    return {\n        type: actionType.SET_OPTION,\n        payload: {\n            name,\n            value,\n        }\n    }\n};\n\nexport const toggleOption = (name) => {\n    return {\n        type: actionType.TOGGLE_OPTION,\n        payload: {\n            name,\n        }\n    }\n};\n\nexport const requestOptions = () => {\n    return {\n        type: actionType.REQUEST_OPTIONS,\n    }\n};\n\nexport const receiveOptions = (options) => {\n    return {\n        type: actionType.RECEIVE_OPTIONS,\n        payload: {\n            options,\n        }\n    }\n};\n\nexport const saveOptionsRequest = () => {\n    return {\n        type: actionType.SAVE_OPTIONS_REQUEST,\n    }\n};\n\nexport const saveOptionsSuccess = () => {\n    return {\n        type: actionType.SAVE_OPTIONS_REQUEST,\n    }\n};\n\n// export const saveOptions = (options) => (dispatch) =>\n//         fetch('/api/set_options', {\n//             credentials: 'include',\n//             body: options,\n//         }).then(response => {\n//             dispatch({\n//                 type: actionType.SAVE_OPTIONS_SUCCESS\n//             });\n//         });\n\n\n\n// WEBPACK FOOTER //\n// ./app/actions/index.jsx"],"sourceRoot":""}